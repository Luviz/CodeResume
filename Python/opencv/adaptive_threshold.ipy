import numpy as np
import cv2 as cv

n = 0
capNum = 0


def getCam():
    global capNum
    capNum = capNum ^ 1
    return cv.VideoCapture(capNum)


cap = getCam()
run = True

# 0 == cv.ADAPTIVE_THRESH_MEAN_C
# 1 == cv.ADAPTIVE_THRESH_GAUSSIAN_C

adaptiveMode = 1
adpti_maxval = 255
adpti_thresholdType = 0  # cv.THRESH_BINARY == 0; INV == 1
adpti_C = 11
try:
    while run:
        rat, frame = cap.read()

        gray = cv.cvtColor(frame, cv.COLOR_BGR2GRAY)
        # gaussian = cv.GaussianBlur(gray, (3, 3), cv.BORDER_DEFAULT)

        try:
            thrs_gray = cv.adaptiveThreshold(
                gray,  adpti_maxval, adaptiveMode, adpti_thresholdType, 31, adpti_C)
            cv.imshow("thrs_gray", thrs_gray)

            canny = cv.Canny(thrs_gray, 155, 200)
            cv.imshow("canny", canny)

            contours, h = cv.findContours(
                canny, cv.RETR_EXTERNAL, cv.CHAIN_APPROX_NONE)
            if len(contours):
                contours = sorted(contours, key=cv.contourArea, reverse=True)
                # print(len(contours))
                # cv.drawContours(frame.copy(), contours, -1, (0,0,200), 10)
                _ = cv.drawContours(frame, contours, -1,
                                    (80, 255, 180), 1, hierarchy=h, maxLevel=2)

                x, y, w, h = cv.boundingRect(contours[0])
                cv.rectangle(frame, (x, y), (x+w, y+h), (255, 100, 0), 2)

                for cnturs in contours[1:5]:
                    x, y, w, h = cv.boundingRect(cnturs)
                    cv.rectangle(frame, (x, y), (x+w, y+h), (155, 255, 155), 2)

                # cv.rectangle(frame, )
                # _ = cv.drawContours(frame, max_contour, -1, (0, 0, 255), 3)

        except Exception as e:
            print(e)

        cv.imshow("frame", frame)
        cv.imshow("gray", gray)

        waitKey = cv.waitKey(1)
        if waitKey > 0:
            print(waitKey, chr(waitKey))
            if waitKey == ord('i'):
                adpti_thresholdType = adpti_thresholdType ^ 1
                print(f"{adpti_thresholdType=}")
            if waitKey == ord('o'):
                adpti_C -= 1
                print(f"{adpti_C=}")
            if waitKey == ord('p'):
                adpti_C += 1
                print(f"{adpti_C=}")
            if waitKey == ord('j'):
                adpti_maxval -= 16
                print(f"{adpti_maxval=}")
            if waitKey == ord('k'):
                adpti_maxval += 16
                print(f"{adpti_maxval=}")
            if waitKey == ord('m'):
                adaptiveMode = adaptiveMode ^ 1
                print(f"{adaptiveMode=}")
            if waitKey == ord('c'):
                cap = getCam()
            if waitKey == ord('q') or waitKey == 27:
                run = False

except Exception as e:
    print(e)


cv.destroyAllWindows()
